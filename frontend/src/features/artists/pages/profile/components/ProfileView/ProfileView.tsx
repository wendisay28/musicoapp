import React from 'react';
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle } from '@/features/shared/components/ui/card';
import { Badge } from '@/features/shared/components/ui/badge';
import { MapPin, Mail, Phone, Globe } from 'lucide-react';
export function ProfileView (props: any){ userData, artistProfile }) {
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Informaci\u00F3n Personal" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-lg font-semibold", children: userData.displayName }), userData.bio && _jsx("p", { className: "text-muted-foreground", children: userData.bio })] }), _jsxs("div", { className: "grid gap-2", children: [userData.email && (_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Mail, { className: "h-4 w-4 text-muted-foreground" }), _jsx("span", { children: userData.email })] })), userData.phone && (_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Phone, { className: "h-4 w-4 text-muted-foreground" }), _jsx("span", { children: userData.phone })] })), userData.location && (_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(MapPin, { className: "h-4 w-4 text-muted-foreground" }), _jsx("span", { children: userData.location })] })), userData.website && (_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Globe, { className: "h-4 w-4 text-muted-foreground" }), _jsx("a", { href: userData.website, target: "_blank", rel: "noopener noreferrer", className: "text-primary hover:underline", children: userData.website })] }))] })] })] }), artistProfile && (_jsxs(_Fragment, { children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Especialidades" }) }), _jsxs(CardContent, { children: [_jsx("div", { className: "flex flex-wrap gap-2", children: artistProfile.specialties?.map((specialty) => (_jsx(Badge, { variant: "secondary", children: specialty }, specialty))) }), artistProfile.experience && (_jsxs("p", { className: "mt-4 text-muted-foreground", children: [artistProfile.experience, " a\u00F1os de experiencia"] }))] })] }), artistProfile.services && artistProfile.services.length > 0 && (_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Servicios" }) }), _jsx(CardContent, { children: _jsx("div", { className: "grid gap-4", children: artistProfile.services.map((service, index) => (_jsxs("div", { className: "border rounded-lg p-4", children: [_jsx("h4", { className: "font-semibold", children: service.name }), _jsx("p", { className: "text-muted-foreground mt-1", children: service.description }), _jsxs("p", { className: "text-primary font-medium mt-2", children: ["$", service.price.toLocaleString()] })] }, index))) }) })] }))] }))] }));
}
