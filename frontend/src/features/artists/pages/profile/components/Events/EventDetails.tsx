import React from 'react';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { format } from 'date-fns';
import { Button } from '@/features/shared/components/ui/button';
import { Share, Edit, MapPin, Calendar, Users, Video } from 'lucide-react';
import { Link } from 'wouter';
import { Card, CardHeader, CardTitle, CardContent } from '@/features/shared/components/ui/card';
import { Badge } from '@/features/shared/components/ui/badge';
export function EventDetails (props: any){ event }) {
    const eventDate = new Date(event.date);
    const attendeesCount = event.attendees || 0;
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex flex-col sm:flex-row justify-between items-start gap-4", children: [_jsx("h1", { className: "text-2xl font-bold tracking-tight", children: event.name }), _jsxs("div", { className: "flex gap-2 w-full sm:w-auto", children: [_jsxs(Button, { variant: "outline", size: "sm", className: "flex-1 sm:flex-initial", children: [_jsx(Share, { className: "h-4 w-4 mr-2" }), "Compartir"] }), _jsx(Button, { variant: "outline", size: "sm", asChild: true, className: "flex-1 sm:flex-initial", children: _jsxs(Link, { href: `/events/${event.id}/edit`, children: [_jsx(Edit, { className: "h-4 w-4 mr-2" }), "Editar"] }) })] })] }), _jsxs("div", { className: "grid md:grid-cols-3 gap-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-lg", children: "Detalles del evento" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-start gap-3", children: [_jsx(Calendar, { className: "h-5 w-5 text-muted-foreground mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: format(eventDate, 'PPP') }), _jsx("p", { className: "text-sm text-muted-foreground", children: format(eventDate, 'hh:mm a') })] })] }), event.eventType === 'in-person' ? (_jsxs("div", { className: "flex items-start gap-3", children: [_jsx(MapPin, { className: "h-5 w-5 text-muted-foreground mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: event.location?.address }), _jsxs("p", { className: "text-sm text-muted-foreground", children: [event.location?.city, ", ", event.location?.country] })] })] })) : (_jsxs("div", { className: "flex items-start gap-3", children: [_jsx(Video, { className: "h-5 w-5 text-muted-foreground mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Evento Virtual" }), event.virtualLink && (_jsx(Button, { variant: "link", className: "p-0 h-auto text-primary hover:text-primary/80", asChild: true, children: _jsx("a", { href: event.virtualLink, target: "_blank", rel: "noopener noreferrer", children: event.virtualLink }) }))] })] }))] })] }), _jsxs(Card, { className: "md:col-span-2", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-lg", children: "Descripci\u00F3n" }) }), _jsx(CardContent, { children: _jsx("p", { className: "whitespace-pre-line text-muted-foreground", children: event.description || 'No hay descripciÃ³n disponible' }) })] })] }), attendeesCount > 0 && (_jsx(Card, { children: _jsxs(CardHeader, { className: "flex flex-col sm:flex-row sm:items-center justify-between gap-3", children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Users, { className: "h-5 w-5" }), _jsx("span", { children: "Asistentes" })] }), _jsxs(Badge, { variant: "outline", children: [attendeesCount, " ", attendeesCount === 1 ? 'confirmado' : 'confirmados'] })] }) }))] }));
}
